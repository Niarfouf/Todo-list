(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([e.id,"html {\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\nbody {\n  margin: 0;\n  padding: 0;\n  \n}\n\n#background {\n  padding: 200px 200px;\n  background-color: aqua;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n}\n\n#main {\n  display: flex;\n  flex-direction: column;\n  min-height: 500px;\n  width: 800px;\n  border: 1px solid black;\n  border-radius: 10px;\n}\n\n#content {\n  flex: auto;\n  display: grid;\n  grid-template-columns: 200px 1fr;\n}\n\n.form-popup {\n  display: none;\n  position: absolute;\n  width: 200px;\n  background-color: blueviolet;\n}\n\n#project-todo {\n  display: grid;\n  grid-auto-flow: row;\n  grid-template-rows: 1fr 50px;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,iCAAiC;EACnC;EACA;IACE,mBAAmB;EACrB;AACF;EACE,SAAS;EACT,UAAU;;AAEZ;;AAEA;EACE,oBAAoB;EACpB,sBAAsB;EACtB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,iBAAiB;EACjB,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,YAAY;EACZ,4BAA4B;AAC9B;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,4BAA4B;AAC9B",sourcesContent:["html {\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\nbody {\n  margin: 0;\n  padding: 0;\n  \n}\n\n#background {\n  padding: 200px 200px;\n  background-color: aqua;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n}\n\n#main {\n  display: flex;\n  flex-direction: column;\n  min-height: 500px;\n  width: 800px;\n  border: 1px solid black;\n  border-radius: 10px;\n}\n\n#content {\n  flex: auto;\n  display: grid;\n  grid-template-columns: 200px 1fr;\n}\n\n.form-popup {\n  display: none;\n  position: absolute;\n  width: 200px;\n  background-color: blueviolet;\n}\n\n#project-todo {\n  display: grid;\n  grid-auto-flow: row;\n  grid-template-rows: 1fr 50px;\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var u=[].concat(e[d]);o&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),n.push(u))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=o.base?s[0]+o.base:s[0],u=a[d]||0,l="".concat(d," ").concat(u);a[d]=u+1;var p=t(l),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(f);else{var A=r(f,o);o.byIndex=c,n.splice(c,0,{identifier:l,updater:A,references:1})}i.push(l)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=o(e,r),d=0;d<a.length;d++){var u=t(a[d]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{function e(e){const n=document.querySelector("#tasksDiv");n.innerText="",e.tasks.forEach((e=>{const t=document.createElement("button");t.innerText=e.title+" "+e.description+" "+e.date,n.appendChild(t)}))}function n(n){window.localStorage.clear(),n.projects.forEach(((e,n)=>{window.localStorage.setItem(n,JSON.stringify(e))})),o(n),e(n.projects[0])}function o(t){const o=document.querySelector("#projectsDiv");o.textContent="",t.projects.forEach((r=>{const a=document.createElement("div"),i=document.createElement("button"),c=document.createElement("button");i.textContent=r.name,c.textContent="X",i.addEventListener("click",(()=>{e(r)})),c.addEventListener("click",(()=>{t.deleteProject(r),n(t)})),a.appendChild(i),"general"!==r.name&&a.appendChild(c),o.appendChild(a)}))}class r{constructor(e,n,t,o,r){this.title=e,this.description=n,this.dueDate=t,this.priority=o,this.index=r,this.checked=!1}}class a{constructor(e,n){this.name=e,this.index=n,this.tasks=[]}addTask(e,n,t,o){this.tasks.push(new r(e,n,t,o,this.tasks.length))}deleteTask(e){this.tasks.splice(e.index,1)}}class i{constructor(){this.projects=[]}addProject(e){this.projects.push(new a(e,this.projects.length))}deleteProject(e){this.projects.splice(e.index,1),0!==e.tasks.length&&e.tasks.forEach((e=>{this.projects[0].tasks.push(e)}))}}var c=t(379),s=t.n(c),d=t(795),u=t.n(d),l=t(569),p=t.n(l),f=t(565),A=t.n(f),m=t(216),h=t.n(m),v=t(589),y=t.n(v),g=t(28),E={};E.styleTagTransform=y(),E.setAttributes=A(),E.insert=p().bind(null,"head"),E.domAPI=u(),E.insertStyleElement=h(),s()(g.Z,E),g.Z&&g.Z.locals&&g.Z.locals,function(){const e=function(e){const n=new i;return 0===e.length&&(e=[{name:"general",index:0,tasks:[]}]),e.forEach(((e,t)=>{n.addProject(e.name),e.tasks.forEach((e=>{n.projects[t].addTask(e.title,e.description,e.dueDate,e.priority)}))})),n}(function(){const e=[],n=Object.keys(window.localStorage);for(let t=0;t<n.length;t++)e.push(JSON.parse(window.localStorage.getItem(n[t])));return e}());o(e);const t=document.querySelector("#addTask"),r=document.querySelector("#createProject");t.addEventListener("click",(()=>{!function(e){const n=document.querySelector("#projectSelect"),t=document.querySelector("#popup-Todo");document.querySelector(".form-todo").reset(),n.innerText="",e.projects.forEach((e=>{const t=document.createElement("option");t.innerText=e.name,t.value=e.name,n.appendChild(t)})),t.style.display="block"}(e)})),r.addEventListener("click",(()=>{!function(){const e=document.querySelector("#popup-Project");document.querySelector(".form-project").reset(),e.style.display="block"}()}));const a=document.querySelector("#cancel"),c=document.querySelector(".form-todo"),s=document.querySelector("#cancel2"),d=document.querySelector(".form-project");function u(){document.querySelector("#popup-Todo").style.display="none",document.querySelector("#popup-Project").style.display="none"}c.addEventListener("submit",(t=>{t.preventDefault(),function(e,t){t.projects.forEach((n=>{n.name===e[4].value&&n.addTask(e[0].value,e[1].value,e[2].value,e[3].value)})),n(t)}(t.target,e),u()})),d.addEventListener("submit",(t=>{t.preventDefault(),function(e,t){t.addProject(e[0].value),n(t)}(t.target,e),u()})),a.addEventListener("click",u),s.addEventListener("click",u)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,